(()=>{"use strict";const t="http://127.0.0.1:8000/api",e="POST",o="token",a=/[A-Za-z0-9]{4,25}@[A-Za-z]{3,10}.[A-Za-z]{2,7}$/,n=/[\w!"·$%&\/(\\)=?*¿+\-`<>.:,;|@#~½¬{\[\]}ªº]{3,20}/,c="danger";class i{static async post(a,n,c=!0){let i=`${t}/${a}`;const s={method:e,headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(n)};if(!0===c){const t=localStorage.getItem(o);if(!t)return!1;s.headers.Authorization=`Bearer ${t}`}try{const t=await fetch(i,s);return console.log(JSON.stringify(n)),await t.json()}catch(t){return console.log(t),!1}}static async postFormData(a,n,c=!0){let i=`${t}/${a}`;const s={method:e,headers:{},body:n};if(!0===c){const t=localStorage.getItem(o);if(!t)return!1;s.headers.Authorization=`Bearer ${t}`}try{const t=await fetch(i,s);return await t.json()}catch(t){return console.log(t),!1}}static async get(e,a,n=!0){let c=String(e);c.endsWith("/")||(c+="/");const i={method:"GET",headers:{Accept:"application/json"}};if(!0===n){const t=localStorage.getItem(o)||null;if(!t)return!1;i.headers.Authorization=`Bearer ${t}`}let s,r=`${t}/${c}`;a instanceof Array&&a.forEach((t=>{r+=`${t}/`}));try{let t=await fetch(r,i);s=await t.json()}catch(t){return console.log(t),null}return s.data?await s.data:await s}static async put(e,a,n,c=!0){let i=`${t}/${e}`;i.endsWith("/")||(i=i.concat("/"));const s={method:"PUT",headers:{Accept:"application/json"}};if(a&&(s.headers={},s.headers["Content-Type"]="application/json",s.body=JSON.stringify(a)),n&&(i+=`${n}`),!0===c){const t=localStorage.getItem(o)||null;if(!t)return!1;s.headers.Authorization=`Bearer ${t}`}try{const t=await fetch(i,s),e=await t.json();return await e}catch(t){return console.log(t),!1}}static async delete(e,a,n,c=!0){let i=`${t}/${e}`;i.endsWith("/")||(i=i.concat("/"));const s={method:"DELETE",headers:{}};if(a&&(s.headers={},s.headers["Content-Type"]="application/json",s.body=JSON.stringify(a)),n&&(i+=`${n}`),!0===c){const t=localStorage.getItem(o)||null;if(!t)return!1;s.headers.Authorization=`Bearer ${t}`}try{console.log(s);const t=await fetch(i,s),e=await t.json();return await e}catch(t){return console.log(t),!1}}}const s="notification",r=(t,e="")=>{const o=document.querySelector(`label[for=${t.id}]`);o&&o.classList.add("has-text-success"),t.classList.add("has-text-success")},l=(t,e="success")=>{if(null!==document.querySelector(`.${s}`))return;const o=document.createElement("div");o.innerHTML=`<div style="z-index: 9999" class="container notification is-${e} is-light">${t}</div>`,document.body.append(o.firstChild);const a=document.querySelector(`.${s}`);setTimeout((()=>a.remove()),3e3)},d=(t,e)=>{localStorage.setItem(t,e)},u=document.querySelector('input[type="email"]'),h=document.querySelector('input[type="password"]'),p=document.querySelector("#login-btn");document.querySelector("form").addEventListener("submit",(t=>t.preventDefault())),p.addEventListener("click",(async t=>{t.preventDefault();const e=a.test(u.value),o=n.test(h.value);if(!e)return void l("El email introducido no es valido",c);if(!o)return void l("La contraseña introducida no es valida",c);const s=u.value,{data:p,message:y}=await(async(t,e)=>{const o={email:t,password:e};return await i.post("auth/login",o,!1)})(s,h.value);p.logged||l("Credenciales invalidas, intentalo de nuevo.",c),p.token&&(r(u),r(h),d("token",p.token),d("id",p.userId),document.cookie="",(t=>{const e=document.cookie.split(";").filter((e=>e.split("=")[1]!==t));document.cookie=e.join(";")})("token"),(t=>{const e=window.location.host;window.location.href=`http://${e}/public/`})())}))})();